for(line in dataframe){
line <- sapply(line, tolower);
print(line);
countVector <- str_count(line,factors);
complexity = complexity + sum(countVector);
}
}
fileList <- list.files(dirData, full.names = TRUE);
dataframe <- readLines(fileList[1]);
for(fileName in fileList){
computeFile(fileName);
}
complexity
##Process each file
computeFile <- function(fileName){
dataframe <- readLines(fileName)
##remove empty lines
dataframe <- removeEmptyElements(dataframe);
##TODO remove comments
##TODO remove tabs
##Count complexity factors
factors <- c("if","else","case","default","return","for","while","do-while","break","continue","&&","\\|\\|", "\\?", ":","catch", "finally", "throw", "throws");
complexity = 1;
for(line in dataframe){
line <- sapply(line, tolower);
print(line);
countVector <- str_count(line,factors);
print(sum(countVector));
complexity = complexity + sum(countVector);
}
}
fileList <- list.files(dirData, full.names = TRUE);
dataframe <- readLines(fileList[1]);
for(fileName in fileList){
computeFile(fileName);
}
?print
computeFile <- function(fileName){
dataframe <- readLines(fileName)
##remove empty lines
dataframe <- removeEmptyElements(dataframe);
##TODO remove comments
##TODO remove tabs
##Count complexity factors
factors <- c("if","else","case","default","return","for","while","do-while","break","continue","&&","\\|\\|", "\\?", ":","catch", "finally", "throw", "throws");
complexity = 1;
for(line in dataframe){
line <- sapply(line, tolower);
print(line);
countVector <- str_count(line,factors);
print(sum(countVector));
complexity = complexity + sum(countVector);
}
print(complexity);
}
fileList <- list.files(dirData, full.names = TRUE);
dataframe <- readLines(fileList[1]);
for(fileName in fileList){
computeFile(fileName);
}
complexity
computeFile <- function(fileName){
dataframe <- readLines(fileName)
##remove empty lines
dataframe <- removeEmptyElements(dataframe);
##TODO remove comments
##TODO remove tabs
##Count complexity factors
factors <- c("if","else","case","default","return","for","while","do-while","break","continue","&&","\\|\\|", "\\?", ":","catch", "finally", "throw", "throws");
complexity = 1;
for(line in dataframe){
line <- sapply(line, tolower);
print(line);
countVector <- str_count(line,factors);
print(sum(countVector));
complexity = complexity + sum(countVector);
}
return (complexity);
}
##Process each file
computeFile <- function(fileName){
dataframe <- readLines(fileName)
##remove empty lines
dataframe <- removeEmptyElements(dataframe);
##TODO remove comments
##TODO remove tabs
##Count complexity factors
factors <- c("if","else","case","default","return","for","while","do-while","break","continue","&&","\\|\\|", "\\?", ":","catch", "finally", "throw", "throws");
complexity = 1;
for(line in dataframe){
line <- sapply(line, tolower);
print(line);
countVector <- str_count(line,factors);
print(sum(countVector));
complexity = complexity + sum(countVector);
}
return (complexity);
}
#Load scripts
baseDir<- "C://Users//chris//OneDrive//Documentos//GitHub//";
dir<- paste(baseDir, "dataWrangling//dataframeUtil.R",sep="");
source(dir);
dirData <-paste(baseDir, "photinus-analytics//codeSnippetAnalysis//data//",sep="");
fileList <- list.files(dirData, full.names = TRUE);
dataframe <- readLines(fileList[1]);
for(fileName in fileList){
print("complexity:"+computeFile(fileName));
}
dir<- paste(baseDir, "dataWrangling//dataframeUtil.R",sep="");
source(dir);
dirData <-paste(baseDir, "photinus-analytics//codeSnippetAnalysis//data//",sep="");
fileList <- list.files(dirData, full.names = TRUE);
dataframe <- readLines(fileList[1]);
for(fileName in fileList){
print("complexity:",computeFile(fileName));
}
baseDir<- "C://Users//chris//OneDrive//Documentos//GitHub//";
dir<- paste(baseDir, "dataWrangling//dataframeUtil.R",sep="");
source(dir);
dirData <-paste(baseDir, "photinus-analytics//codeSnippetAnalysis//data//",sep="");
fileList <- list.files(dirData, full.names = TRUE);
dataframe <- readLines(fileList[1]);
for(fileName in fileList){
cat("complexity:",computeFile(fileName));
}
?qnorm
qnorm(0.95,0,1,lower.tail = FALSE, log.p = FALSE)
qnorm(95,0,1,lower.tail = FALSE, log.p = FALSE)
qnorm(0.95,0,1,lower.tail = TRUE, log.p = FALSE)
qnorm(0.975,0,1,lower.tail = TRUE, log.p = FALSE)
?dbeta
theta=seq(from=0,to=1,by=.01)
plot(theta,dbeta(theta,4,0),type="l")
plot(theta,dbeta(theta,4,1),type="l")
plot(theta,dbeta(theta,1,1),type="l")
theta=seq(from=0,to=1,by=.01)
plot(theta,dbeta(theta,4,2),type="l")
plot(theta,dbeta(theta,0,4),type="l")
?dbeta
plot(theta,dbeta(theta,1,4),type="l")
plot(theta,dbeta(theta,1,5),type="l")
1-pbeta(.25,41,11)
1-pbeta(.5,41,11)
1-pbeta(.8,41,11)
1-pbeta(.5,1,5)
pbeta(.5,1,5)
plot(theta,dbeta(theta,41,11),type="l")
1-pbeta(.5,41,11)
1-pbeta(.8,41,11)
?pbeta
1-pbeta(.8,41,11,lower.tail = TRUE)
1-pbeta(.8,1,5,lower.tail = TRUE)
theta=seq(from=0,to=1,by=.01)
plot(theta,dbeta(theta,1,5),type="l")
pbeta(.5,1,5)
pbeta(.5,1,5)
1- pbeta(.95,8,16)
1- pbeta(0.95,16,8)
qbeta(0.025,8,16)
qbeta(0.975,8,16)
1-pbeta(.8,41,11)
1-pbeta(.5,41,11)
1-pbeta(.25,41,11)
qbeta(.025,41,11)
qbeta(.975,41,11)
qbeta(0.05,8,16)
qbeta(0.95,8,16)
qbeta(0.90,8,16)
?pbeta
pgamma
pgamma
?pgamma
theta=seq(from=0,to=1,by=.01)
plot(theta,gamma(theta,67,6),type="l")
plot(theta,dgamma(theta,67,6),type="l")
plot(theta,dgamma(theta,8,1),type=".")
plot(theta,dgamma(theta,67,6),type="l")
plot(theta,dgamma(theta,8,1),type="-")
plot(theta,dgamma(theta,8,1),type="-")
lines(theta,dgamma(theta,67,6),lty=2)
lines(theta,dgamma(theta,8,1),lty=3
plot(theta,dbeta(theta,32,20),type="l")
lines(theta,dbeta(theta,8,4),lty=2)
lines(theta,44*dbinom(24,size=40,p=theta),lty=3)
plot(theta,dbeta(theta,32,20),type="l")
lines(theta,dbeta(theta,8,4),lty=2)
source('C:/Users/chris/OneDrive/Documentos/GitHub/bayesianStudies/CredibleIntervals.R', echo=TRUE)
plot(theta,dgamma(theta,8,1),type="l")
lines(theta,dgamma(theta,8,1),lty=3)
lines(theta,dgamma(theta,67,6),lty=2)
gam=seq(from=0,to=20,by=1)
plot(theta,dgamma(gam,8,1),type="l")
lines(theta,dgamma(gam,8,1),lty=3)
lines(theta,dgamma(gam,67,6),lty=2)
plot(theta,dgamma(gam,8,1),type="l")
gam=seq(from=0,to=20,by=1)
plot(theta,dgamma(gam,8,1),type="l")
plot(gam,dgamma(gam,8,1),type="l")
lines(gam,dgamma(gam,8,1),lty=3)
lines(gam,dgamma(gam,67,6),lty=2)
plot(gam,dgamma(gam,67,6),type="l")
lines(gam,dgamma(gam,8,1),lty=3)
lines(gam,dgamma(gam,67,6),lty=2)
plot(gam,dgamma(gam,67,6),type="l")
lines(gam,dgamma(gam,8,1),lty=2)
lines(gam,dgamma(gam,67,6),lty=3)
plot(gam,dgamma(gam,67,6),type="l")
lines(gam,dgamma(gam,8,1),lty=2)
qgamma(0.05,67,6)
qgamma(0.95,67,6)
install.packages('randomForest')
library(dplyr);
library(ggplot2);
source("C://Users//chris//OneDrive//Documentos//GitHub//photinus-analytics//loadAnswers.R");
dataf =loadAnswers();
subset_df <-subset(dataf,select= c(Question.ID, Worker.score));
subset_df <- data.frame(subset_df);
by_questions<- group_by(subset_df,Question.ID) ;
summaryTable <- summarize(by_questions,sum( Worker.score));
colnames(summaryTable)<-c("QuestoinID","WorkerScore");
ggplot(summaryTable,aes(x=WorkerScore))+ geom_histogram(binwidth = 0.25)
+ ggtitle("Distribution of worker score per question")
+ labs(y="question count", x="worker score per question");
View(summaryTable)
View(summaryTable)
View(by_questions)
View(by_questions)
View(by_questions)
View(by_questions)
by_questions <- rowSums(subset_df$Worker.score==0)
rowSums(subset_df$Worker.score==0)
rowSums(subset_df==0)
rowSums(subset_df==3)
countScore3<- rowSums(subset_df==3)
head(countScore3)
countScore3<- rowSums(subset_df==7)
head(countScore3)
View(subset_df)
View(subset_df)
countScore3<- rowSums(subset_df==3);
countScore4<- rowSums(subset_df==4);
countScore5<- rowSums(subset_df==5);
countScore<- rowSums(subset_df==3);
subset_df["scoreCount"] <- countScore;
summaryTable <- summarize(subset_df,sum(scoreCount));
colnames(summaryTable)<-c("QuestoinID","ScoreCount");
countScore<- rowSums(subset_df==3);
subset_df["scoreCount"] <- countScore;
summaryTable <- summarize(subset_df,sum(scoreCount));
View(summaryTable)
View(summaryTable)
View(subset_df)
View(subset_df)
question_by <- group_by(subset_df,Question.ID);
View(by_questions)
View(by_questions)
countScore<- rowSums(subset_df==3);
subset_df["scoreCount"] <- scoreCount;
scoreCount<- rowSums(subset_df==3);
subset_df["scoreCount"] <- scoreCount;
question_by <- group_by(subset_df,Question.ID);
summaryTable <- summarize(subset_df,sum(scoreCount));
View(summaryTable)
View(summaryTable)
View(question_by)
View(question_by)
subset_df <-subset(dataf,select= c(Question.ID, Worker.score));
subset_df <- data.frame(subset_df);
scoreCount<- rowSums(subset_df==3);
subset_df["scoreCount"] <- scoreCount;
subset_df <-subset(dataf,select= -c(Worker.score));
View(subset_df)
View(subset_df)
subset_df <-subset(dataf,select= c(Question.ID, Worker.score));
subset_df <- data.frame(subset_df);
scoreCount<- rowSums(subset_df==3);
subset_df["scoreCount"] <- scoreCount;
subset_df <-subset(dataf,select= c(Question.ID,scoreCount));
View(subset_df)
View(subset_df)
subset_df <-subset(dataf,select= c(Question.ID, Worker.score));
subset_df <- data.frame(subset_df);
scoreCount<- rowSums(subset_df==3);
subset_df["scoreCount"] <- scoreCount;
View(subset_df)
View(subset_df)
subset_df <-subset(subset_df,select= c(Question.ID,scoreCount));
View(subset_df)
View(subset_df)
question_by <- group_by(subset_df,Question.ID);
View(question_by)
View(question_by)
summaryTable <- summarize(subset_df,sum(scoreCount));
View(summaryTable)
View(summaryTable)
summaryTable <- summarize(question_by,sum(scoreCount));
subset_df <-subset(dataf,select= c(Question.ID, Worker.score));
subset_df <- data.frame(subset_df);
scoreCount<- rowSums(subset_df==3);
subset_df["scoreCount"] <- scoreCount;
subset_df <-subset(subset_df,select= c(Question.ID,scoreCount));
question_by <- group_by(subset_df,Question.ID);
summaryTable <- summarize(question_by,sum(scoreCount));
View(summaryTable)
View(summaryTable)
colnames(summaryTable)<-c("QuestoinID","scoreCount");
View(summaryTable)
View(summaryTable)
subset_df <-subset(dataf,select= c(Question.ID, Worker.score));
subset_df <- data.frame(subset_df);
scoreCount<- rowSums(subset_df==3);
subset_df["scoreCount"] <- scoreCount;
subset_df <-subset(subset_df,select= c(Question.ID,scoreCount));
question_by <- group_by(subset_df,Question.ID);
summaryTable <- summarize(question_by,sum(scoreCount));
View(summaryTable)
View(summaryTable)
colnames(summaryTable)<-c("QuestoinID","scoreCount");
countScoreLevel<- function(level){
subset_df <-subset(dataf,select= c(Question.ID, Worker.score));
subset_df <- data.frame(subset_df);
scoreCount<- rowSums(subset_df==level);
subset_df["scoreCount"] <- scoreCount;
subset_df <-subset(subset_df,select= c(Question.ID,scoreCount));
question_by <- group_by(subset_df,Question.ID);
summaryTable <- summarize(question_by,sum(scoreCount));
colnames(summaryTable)<-c("QuestoinID","scoreCount");
return(summaryTable);
}
tableScore = countScoreLevel(3);
ggplot(summaryTable,aes(x=scoreCount))
+ geom_histogram(binwidth = 0.25)
+ ggtitle("Distribution of worker score per question")
+ labs(y="question count", x="worker score per question");
tableScore = countScoreLevel(3);
View(tableScore)
View(tableScore)
tableScore = countScoreLevel(3);
ggplot(tableScore,aes(x=scoreCount))
+ geom_histogram(binwidth = 0.25)
+ ggtitle("Distribution of worker score per question")
+ labs(y="question count", x="worker score per question");
tableScore = countScoreLevel(3);
ggplot(tableScore,aes(x=scoreCount))+
geom_histogram(binwidth = 0.25) +
ggtitle("Distribution of worker score per question") +
labs(y="question count", x="worker score per question");
shapiro.test(tableScore$scoreCount);
View(tableScore)
View(tableScore)
View(tableScore)
View(subset_df)
View(subset_df)
View(subset_df)
View(dataf)
View(dataf)
subset_df <-subset(dataf,select= c(Question.ID, Worker.score));
subset_df <- data.frame(subset_df);
scoreCount<- rowSums(subset_df==3);
subset_df["scoreCount"] <- scoreCount;
View(subset_df)
View(subset_df)
subset_df <-subset(dataf,select= c(Worker.score));
subset_df <- data.frame(subset_df);
scoreCount<- rowSums(subset_df==3);
subset_df["scoreCount"] <- scoreCount;
subset_df <-subset(subset_df,select= c(Question.ID,scoreCount));
question_by <- group_by(subset_df,Question.ID);
summaryTable <- summarize(question_by,sum(scoreCount));
colnames(summaryTable)<-c("QuestoinID","scoreCount");
subset_df <-subset(dataf,select= c(Worker.score));
subset_df <- data.frame(subset_df);
scoreCount<- rowSums(subset_df==3);
subset_df["scoreCount"] <- scoreCount;
View(subset_df)
View(subset_df)
subset_df["QuestionID"] <- dataf$Question.ID;
question_by <- group_by(subset_df,Question.ID);
summaryTable <- summarize(question_by,sum(scoreCount));
library(dplyr);
library(ggplot2);
subset_df <-subset(dataf,select= c(Worker.score));
subset_df <- data.frame(subset_df);
scoreCount<- rowSums(subset_df==3);
subset_df["scoreCount"] <- scoreCount;
subset_df["Question.ID"] <- dataf$Question.ID;
subset_df <-subset(subset_df,select= c(Question.ID,scoreCount));
question_by <- group_by(subset_df,Question.ID);
summaryTable <- summarize(question_by,sum(scoreCount));
View(summaryTable)
View(summaryTable)
colnames(summaryTable)<-c("QuestoinID","scoreCount");
ggplot(summaryTable,aes(x=scoreCount))+
geom_histogram(binwidth = 0.25) +
ggtitle("Distribution of worker score per question") +
labs(y="question count", x="worker score per question");
shapiro.test(tableScore$scoreCount);
ggplot(summaryTable,aes(x=scoreCount))+
geom_histogram(binwidth = 0.2) +
ggtitle("Distribution of worker score per question") +
labs(y="question count", x="worker score per question");
srt < cat(title,3)
srt <- cat(title,3)
srt <- cat("title",3)
countScoreLevel<- function(level){
subset_df <-subset(dataf,select= c(Worker.score));
subset_df <- data.frame(subset_df);
scoreCount<- rowSums(subset_df==3);
subset_df["scoreCount"] <- scoreCount;
subset_df["Question.ID"] <- dataf$Question.ID;
subset_df <-subset(subset_df,select= c(Question.ID,scoreCount));
question_by <- group_by(subset_df,Question.ID);
summaryTable <- summarize(question_by,sum(scoreCount));
colnames(summaryTable)<-c("QuestoinID","scoreCount");
title<- cat("Distribution of worker score per question",level);
ggplot(summaryTable,aes(x=scoreCount))+
geom_histogram(binwidth = 0.2) +
ggtitle(title) +
labs(y="question count", x="worker score per question");
}
tableScore = countScoreLevel(3);
tableScore = countScoreLevel(4);
tableScore = countScoreLevel(5);
countScoreLevel<- function(level){
subset_df <-subset(dataf,select= c(Worker.score));
subset_df <- data.frame(subset_df);
scoreCount<- rowSums(subset_df==level);
subset_df["scoreCount"] <- scoreCount;
subset_df["Question.ID"] <- dataf$Question.ID;
subset_df <-subset(subset_df,select= c(Question.ID,scoreCount));
question_by <- group_by(subset_df,Question.ID);
summaryTable <- summarize(question_by,sum(scoreCount));
colnames(summaryTable)<-c("QuestoinID","scoreCount");
title<- cat("Distribution of worker score per question",level);
ggplot(summaryTable,aes(x=scoreCount))+
geom_histogram(binwidth = 0.2) +
ggtitle(title) +
labs(y="question count", x="worker score per question");
}
tableScore = countScoreLevel(3);
title<- cat("Distribution of worker score per question",level);
title<- cat("Distribution of worker score per question",3);
countScoreLevel<- function(level){
subset_df <-subset(dataf,select= c(Worker.score));
subset_df <- data.frame(subset_df);
scoreCount<- rowSums(subset_df==level);
subset_df["scoreCount"] <- scoreCount;
subset_df["Question.ID"] <- dataf$Question.ID;
subset_df <-subset(subset_df,select= c(Question.ID,scoreCount));
question_by <- group_by(subset_df,Question.ID);
summaryTable <- summarize(question_by,sum(scoreCount));
colnames(summaryTable)<-c("QuestoinID","scoreCount");
title<- cat("Distribution of worker score per question",3);
ggplot(summaryTable,aes(x=scoreCount))+
geom_histogram(binwidth = 0.2) +
ggtitle(title) +
labs(y="question count", x="worker score per question")
}
tableScore = countScoreLevel(3);
countScoreLevel<- function(level){
subset_df <-subset(dataf,select= c(Worker.score));
subset_df <- data.frame(subset_df);
scoreCount<- rowSums(subset_df==level);
subset_df["scoreCount"] <- scoreCount;
subset_df["Question.ID"] <- dataf$Question.ID;
subset_df <-subset(subset_df,select= c(Question.ID,scoreCount));
question_by <- group_by(subset_df,Question.ID);
summaryTable <- summarize(question_by,sum(scoreCount));
colnames(summaryTable)<-c("QuestoinID","scoreCount");
# title<- cat("Distribution of worker score per question",3);
ggplot(summaryTable,aes(x=scoreCount))+
geom_histogram(binwidth = 0.2) +
ggtitle("title") +
labs(y="question count", x="worker score per question")
}
tableScore = countScoreLevel(3);
countScoreLevel<- function(level){
subset_df <-subset(dataf,select= c(Worker.score));
subset_df <- data.frame(subset_df);
scoreCount<- rowSums(subset_df==level);
subset_df["scoreCount"] <- scoreCount;
subset_df["Question.ID"] <- dataf$Question.ID;
subset_df <-subset(subset_df,select= c(Question.ID,scoreCount));
question_by <- group_by(subset_df,Question.ID);
summaryTable <- summarize(question_by,sum(scoreCount));
colnames(summaryTable)<-c("QuestoinID","scoreCount");
return(summaryTable);
}
tableScore = countScoreLevel(3);
title<- cat("Distribution of worker score per question",3);
ggplot(summaryTable,aes(x=scoreCount))+
geom_histogram(binwidth = 0.2) +
ggtitle(title) +
labs(y="question count", x="worker score per question")
tableScore = countScoreLevel(4);
title<- cat("Distribution of worker score per question",4);
ggplot(summaryTable,aes(x=scoreCount))+
geom_histogram(binwidth = 0.2) +
ggtitle(title) +
labs(y="question count", x="worker score per question")
tableScore = countScoreLevel(4);
title<- cat("Distribution of worker score per question",4);
ggplot(summaryTable,aes(x=scoreCount))+
geom_histogram(binwidth = 0.2) +
ggtitle(title) +
labs(y="question count", x="worker score per question")
tableScore = countScoreLevel(5);
title<- cat("Distribution of worker score per question",5);
ggplot(summaryTable,aes(x=scoreCount))+
geom_histogram(binwidth = 0.2) +
ggtitle(title) +
labs(y="question count", x="worker score per question")
