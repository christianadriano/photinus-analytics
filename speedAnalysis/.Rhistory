i<-6
gg6<- ggplot(sampleList[[i]], aes(positiveVoting_Plots[[i]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-7
gg7<- ggplot(sampleList[[i]], aes(positiveVoting_Plots[[i]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-8
gg8<- ggplot(sampleList[[i]], aes(positiveVoting_Plots[[i]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-9
gg9<- ggplot(sampleList[[i]], aes(positiveVoting_Plots[[i]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-10
gg10<- ggplot(sampleList[[i]], aes(positiveVoting_Plots[[i]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-11
gg11<- ggplot(sampleList[[i]], aes(positiveVoting_Plots[[i]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-12
gg12<- ggplot(sampleList[[i]], aes(positiveVoting_Plots[[i]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-13
gg13<- ggplot(sampleList[[i]], aes(positiveVoting_Plots[[i]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-14
gg14<- ggplot(sampleList[[i]], aes(positiveVoting_Plots[[i]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-15
gg15<- ggplot(sampleList[[i]], aes(positiveVoting_Plots[[i]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-16
gg16<- ggplot(sampleList[[i]], aes(positiveVoting_Plots[[i]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-17
gg17<- ggplot(sampleList[[i]], aes(positiveVoting_Plots[[i]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-18
gg18<- ggplot(sampleList[[i]], aes(positiveVoting_Plots[[i]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-19
gg19<- ggplot(sampleList[[i]], aes(positiveVoting_Plots[[i]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
multiplot(gg1,gg2,gg3,gg4,gg5,gg6,gg7,gg8,gg9,gg10,gg11,gg12,gg13,gg14,gg15,gg16,gg17,gg18,gg19, cols=6)
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
multiplotList <- function(plots, file, cols=1, layout=NULL) {
library(grid)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
i<-1
gg1<- ggplot(sampleList[[i]], aes(positiveVoting_Plots[[i]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-2
gg2<- ggplot(sampleList[[i]], aes(positiveVoting_Plots[[i]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-3
gg3<- ggplot(sampleList[[i]], aes(positiveVoting_Plots[[i]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-4
gg4<- ggplot(sampleList[[i]], aes(positiveVoting_Plots[[i]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-5
gg5<- ggplot(sampleList[[i]], aes(positiveVoting_Plots[[i]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-6
gg6<- ggplot(sampleList[[i]], aes(positiveVoting_Plots[[i]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-7
gg7<- ggplot(sampleList[[i]], aes(positiveVoting_Plots[[i]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-8
gg8<- ggplot(sampleList[[i]], aes(positiveVoting_Plots[[i]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-9
gg9<- ggplot(sampleList[[i]], aes(positiveVoting_Plots[[i]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-10
gg10<- ggplot(sampleList[[i]], aes(positiveVoting_Plots[[i]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-11
gg11<- ggplot(sampleList[[i]], aes(positiveVoting_Plots[[i]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-12
gg12<- ggplot(sampleList[[i]], aes(positiveVoting_Plots[[i]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-13
gg13<- ggplot(sampleList[[i]], aes(positiveVoting_Plots[[i]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-14
gg14<- ggplot(sampleList[[i]], aes(positiveVoting_Plots[[i]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-15
gg15<- ggplot(sampleList[[i]], aes(positiveVoting_Plots[[i]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-16
gg16<- ggplot(sampleList[[i]], aes(positiveVoting_Plots[[i]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-17
gg17<- ggplot(sampleList[[i]], aes(positiveVoting_Plots[[i]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-18
gg18<- ggplot(sampleList[[i]], aes(positiveVoting_Plots[[i]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-19
gg19<- ggplot(sampleList[[i]], aes(positiveVoting_Plots[[i]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
multiplot(gg1,gg2,gg3,gg4,gg5,gg6,gg7,gg8,gg9,gg10,gg11,gg12,gg13,gg14,gg15,gg16,gg17,gg18,gg19, cols=6)
i<-1
- ggplot(sampleList[[i]], aes(positiveVoting_Plots[[i]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-1
ggplot(sampleList[[i]], aes(positiveVoting_Plots[[i]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-2
ggplot(sampleList[[i]], aes(positiveVoting_Plots[[i]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-1
gg1<- ggplot(sampleList[[i]], aes(positiveVoting_Plots[[i]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-2
gg2<- ggplot(sampleList[[i]], aes(positiveVoting_Plots[[i]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
multiplot(gg1,gg2, cols=2)
old.par <- par(mfrow=c(1, 2))
print(gg1)
print(gg2)
par(old.par)
par(mfrow=c(2,2))
print(gg1)
print(gg2)
par(mfrow=c(2,2))
print(gg1)
print(gg2)
multiplot(gg1,gg2, cols=2) #gg3,gg4,gg5,gg6,gg7,gg8,gg9,gg10,gg11,gg12,gg13,gg14,gg15,gg16,gg17,gg18,gg19, cols=6)
multiplot(gg1,gg2,gg8 cols=3) #gg3,gg4,gg5,gg6,gg7,gg8,gg9,gg10,gg11,gg12,gg13,gg14,gg15,gg16,gg17,gg18,gg19, cols=6)
multiplot(gg1,gg2,gg8 ,cols=3) #gg3,gg4,gg5,gg6,gg7,gg8,gg9,gg10,gg11,gg12,gg13,gg14,gg15,gg16,gg17,gg18,gg19, cols=6)
i<-1
gg1<- ggplot(c(sampleList[[i]]), aes(c(positiveVoting_Plots[[i]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-2
gg2<- ggplot(c(sampleList[[i]]), aes(c(positiveVoting_Plots[[i]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-1
gg1<- ggplot(c(sampleList[[i]])), aes(c(positiveVoting_Plots[[i]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-2
gg2<- ggplot(c(sampleList[[i]])), aes(c(positiveVoting_Plots[[i]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-1
gg1<- ggplot(list(sampleList[[i]])), aes(list(positiveVoting_Plots[[i]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-1
gg1<- ggplot(c(sampleList[[i]]), aes(c(positiveVoting_Plots[[i]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-2
gg2<- ggplot(c(sampleList[[i]]), aes(c(positiveVoting_Plots[[i]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-1
gg1<- ggplot(c(sampleList[[i]]), aes(c(positiveVoting_Plots[[i]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-1
gg1<- ggplot((sampleList[[i]]), aes(c(positiveVoting_Plots[[i]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-1
gg1<- ggplot(sampleList[[i]], aes(c(positiveVoting_Plots[[i]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-1
gg1<- ggplot(sampleList[[i]], aes(positiveVoting_Plots[[i]]) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-1
gg1<- ggplot(sampleList[[i]], aes(c(positiveVoting_Plots[[i]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-1
gg1<- ggplot(sampleList[[i]], aes(c(positiveVoting_Plots[[i]]))) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-1
gg1<- ggplot(sampleList[[i]], aes(c(positiveVoting_Plots[[i]]))) +   geom_histogram(binwidth=1)
ggplot(sampleList[[i]], aes(c(positiveVoting_Plots[[i]]))) +   geom_histogram(binwidth=1)
ggplot(sampleList[[i]], aes(c(positiveVoting_Plots[[i]]))) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" "))
ggplot(sampleList[[i]], aes(c(positiveVoting_Plots[[i]]))) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")
ggplot(sampleList[[i]], aes(c(positiveVoting_Plots[[i]]))) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-1
gg1<- ggplot(sampleList[[i]], aes(c(positiveVoting_Plots[[i]]))) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-1
gg1<- ggplot(sampleList[[i]], aes(c(positiveVoting_Plots[[i]]))) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-2
gg2<- ggplot(c(sampleList[[i]]), aes(c(positiveVoting_Plots[[i]]))) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-1
gg1<- ggplot(sampleList[[i]], aes(c(positiveVoting_Plots[[i]]))) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-2
gg2<- ggplot(sampleList[[i]], aes(c(positiveVoting_Plots[[i]]))) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
multiplot(gg1,gg2,cols=2) #gg3,gg4,gg5,gg6,gg7,gg8,gg9,gg10,gg11,gg12,gg13,gg14,gg15,gg16,gg17,gg18,gg19, cols=6)
i<-1
gg1<- ggplot(sampleList[[i]], aes(c(positiveVoting_Plots[[i]]))) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-4
gg2<- ggplot(sampleList[[i]], aes(c(positiveVoting_Plots[[i]]))) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
multiplot(gg1,gg2,cols=2) #gg3,gg4,gg5,gg6,gg7,gg8,gg9,gg10,gg11,gg12,gg13,gg14,gg15,gg16,gg17,gg18,gg19, cols=6)
multiplot(gg2,gg1,cols=2) #gg3,gg4,gg5,gg6,gg7,gg8,gg9,gg10,gg11,gg12,gg13,gg14,gg15,gg16,gg17,gg18,gg19, cols=6)
par(mfrow=c(2,2))
print(gg1)
print(gg2)
multiplot(gg2,gg1,cols=2) #gg3,gg4,gg5,gg6,gg7,gg8,gg9,gg10,gg11,gg12,gg13,gg14,gg15,gg16,gg17,gg18,gg19, cols=6)
print(gg1)
print(gg2)
print(gg2)
print(gg1)
print(gg2)
ggplot(sampleList[[i]], aes(c(positiveVoting_Plots[[i]]))) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-1
gg1<- ggplot(sampleList[[1]], aes(c(positiveVoting_Plots[[1]]))) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-2
gg2<- ggplot(sampleList[[2]], aes(c(positiveVoting_Plots[[2]]))) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
multiplot(gg2,gg1,cols=2) #gg3,gg4,gg5,gg6,gg7,gg8,gg9,gg10,gg11,gg12,gg13,gg14,gg15,gg16,gg17,gg18,gg19, cols=6)
i<-1
ggplot(sampleList[[i]], aes(c(positiveVoting_Plots[[i]]))) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
#-------------------------------------------------------
#UGLY SOLUTION
i<-1
gg1<- ggplot(sampleList[[1]], aes(c(positiveVoting_Plots[[1]]))) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-2
gg2<- ggplot(sampleList[[2]], aes(c(positiveVoting_Plots[[2]]))) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-3
gg3<- ggplot(sampleList[[3]], aes(positiveVoting_Plots[[3]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-4
gg4<- ggplot(sampleList[[4]], aes(positiveVoting_Plots[[4]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-5
gg5<- ggplot(sampleList[[5]], aes(positiveVoting_Plots[[5]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-6
gg6<- ggplot(sampleList[[6]], aes(positiveVoting_Plots[[6]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-7
gg7<- ggplot(sampleList[[7]], aes(positiveVoting_Plots[[7]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-8
gg8<- ggplot(sampleList[[8]], aes(positiveVoting_Plots[[8]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-9
gg9<- ggplot(sampleList[[9]], aes(positiveVoting_Plots[[9]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-10
gg10<- ggplot(sampleList[[10]], aes(positiveVoting_Plots[[10]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-11
gg11<- ggplot(sampleList[[11]], aes(positiveVoting_Plots[[11]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-12
gg12<- ggplot(sampleList[[12]], aes(positiveVoting_Plots[[12]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-13
gg13<- ggplot(sampleList[[13]], aes(positiveVoting_Plots[[13]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-14
gg14<- ggplot(sampleList[[14]], aes(positiveVoting_Plots[[14]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-15
gg15<- ggplot(sampleList[[15]], aes(positiveVoting_Plots[[15]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-16
gg16<- ggplot(sampleList[[16]], aes(positiveVoting_Plots[[16]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-17
gg17<- ggplot(sampleList[[17]], aes(positiveVoting_Plots[[17]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-18
gg18<- ggplot(sampleList[[18]], aes(positiveVoting_Plots[[18]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-19
gg19<- ggplot(sampleList[[19]], aes(positiveVoting_Plots[[19]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
multiplot(gg1,gg2,gg3,gg4,gg5,gg6,gg7,gg8,gg9,gg10,gg11,gg12,gg13,gg14,gg15,gg16,gg17,gg18,gg19, cols=6)
positiveVoting_Mean <- rep(NA,19)
positiveVoting_MeanRecall <- rep(NA,19)
majorityVoting_Mean <- rep(NA,19)
majorityVoting_MeanRecall <- rep(NA,19)
majorityVoting_ZEROS <- rep(NA,19)
positiveVoting_Plots<-list()
sampleList<- list()
for(i in 1:19) {
answerCount = i;
fileName = paste(answerCount,".csv", sep="");
setwd("C://firefly//SamplingPredictor//")
sample <- read.csv(fileName,  header=T)
positiveVoting_Mean[i] = mean(sample$Average.Precision_PV,na.rm=TRUE)
positiveVoting_MeanRecall[i] = mean(sample$Average.Recall_PV,na.rm=TRUE)
majorityVoting_Mean[i] = mean(sample$Average.Precision_MV, na.rm=TRUE)
majorityVoting_MeanRecall[i] = mean(sample$Average.Recall_MV,na.rm=TRUE)
majorityVoting_ZEROS[i] = sum(identical(numeric(0), (sample$Average.Precision_MV)))
positiveVoting_Plots[[i]]<- sample$Average.Precision_MV;
sampleList[[i]]<-sample
}
i<-1
gg1<- ggplot(sampleList[[1]], aes(c(positiveVoting_Plots[[1]]))) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-2
gg2<- ggplot(sampleList[[2]], aes(c(positiveVoting_Plots[[2]]))) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-3
gg3<- ggplot(sampleList[[3]], aes(positiveVoting_Plots[[3]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-4
gg4<- ggplot(sampleList[[4]], aes(positiveVoting_Plots[[4]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-5
gg5<- ggplot(sampleList[[5]], aes(positiveVoting_Plots[[5]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-6
gg6<- ggplot(sampleList[[6]], aes(positiveVoting_Plots[[6]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-7
gg7<- ggplot(sampleList[[7]], aes(positiveVoting_Plots[[7]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-8
gg8<- ggplot(sampleList[[8]], aes(positiveVoting_Plots[[8]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-9
gg9<- ggplot(sampleList[[9]], aes(positiveVoting_Plots[[9]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-10
gg10<- ggplot(sampleList[[10]], aes(positiveVoting_Plots[[10]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-11
gg11<- ggplot(sampleList[[11]], aes(positiveVoting_Plots[[11]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-12
gg12<- ggplot(sampleList[[12]], aes(positiveVoting_Plots[[12]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-13
gg13<- ggplot(sampleList[[13]], aes(positiveVoting_Plots[[13]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-14
gg14<- ggplot(sampleList[[14]], aes(positiveVoting_Plots[[14]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-15
gg15<- ggplot(sampleList[[15]], aes(positiveVoting_Plots[[15]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-16
gg16<- ggplot(sampleList[[16]], aes(positiveVoting_Plots[[16]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-17
gg17<- ggplot(sampleList[[17]], aes(positiveVoting_Plots[[17]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-18
gg18<- ggplot(sampleList[[18]], aes(positiveVoting_Plots[[18]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
i<-19
gg19<- ggplot(sampleList[[19]], aes(positiveVoting_Plots[[19]])) +   geom_histogram(binwidth=1)  +    ggtitle(paste("Replication:",i,sep=" ")) + xlab("answers")+ ylab("precision (%)")
multiplot(gg1,gg2,gg3,gg4,gg5,gg6,gg7,gg8,gg9,gg10,gg11,gg12,gg13,gg14,gg15,gg16,gg17,gg18,gg19, cols=6)
fileName = paste(answerCount,".csv", sep="");
setwd("C://firefly//SpeedAnalyis//speedAnalysis.csv")
sample <- read.csv(fileName,  header=T)
summary(sample)
fileName =speedAnalysis.csv
setwd("C://firefly//SpeedAnalysis//")
sample <- read.csv(fileName,  header=T)
summary(sample)
fileName ="speedAnalysis.csv"
setwd("C://firefly//SpeedAnalysis//")
sample <- read.csv(fileName,  header=T)
summary(sample)
xAxys <- c(sample$Hours.taken)
dat <- data.frame(
Hours = factor(xAxis, levels=xAxis),
Precision = sample$Average.Precision_PV,
Recall = sample$Average.Recall_PV
)
xAxis <- c(sample$Hours.taken)
dat <- data.frame(
Hours = factor(xAxis, levels=xAxis),
Precision = sample$Average.Precision_PV,
Recall = sample$Average.Recall_PV
)
dat.m <- melt(datRecall, id.vars = "Hours")
library(reshape2)
dat.m <- melt(datRecall, id.vars = "Hours")
dat <- data.frame(
Hours = factor(xAxis, levels=xAxis),
Precision = sample$Average.Precision_PV,
Recall = sample$Average.Recall_PV
)
dat.m <- melt(datRecall, id.vars = "Hours")
dat.m <- melt(dat, id.vars = "Hours")
ggplot(dat.m, aes(x=Hours, y=value, group=variable)) +
xlab("Elapsed hours") +
ylab("average precision or recall (%)") +
ggtitle("Precision and Recall by time")+
theme_bw()+
theme(legend.justification=c(1,0), legend.position=c(1,0))+
geom_point(aes(shape=variable), size=4.0)+
geom_line(aes(linetype=variable), size=1.0)+
scale_shape_manual(values=c(1,2))+
scale_linetype_manual(values=c("solid","dashed"))
fileName ="speedAnalysis.csv"
setwd("C://firefly//SpeedAnalysis//")
sample <- read.csv(fileName,  header=T)
summary(sample)
xAxis <- c(sample$Hours.taken)
dat <- data.frame(
Hours = factor(xAxis, levels=xAxis),
Precision = sample$Average.Precision_PV,
Recall = sample$Average.Recall_PV
)
dat.m <- melt(dat, id.vars = "Hours")
ggplot(dat.m, aes(x=Hours, y=value, group=variable)) +
xlab("Elapsed hours") +
ylab("average precision or recall (%)") +
ggtitle("Precision and Recall by time")+
theme_bw()+
theme(legend.justification=c(1,0), legend.position=c(1,0))+
geom_point(aes(shape=variable), size=4.0)+
geom_line(aes(linetype=variable), size=1.0)+
scale_shape_manual(values=c(1,2))+
scale_linetype_manual(values=c("solid","dashed"))
fileName ="speedAnalysis.csv"
setwd("C://firefly//SpeedAnalysis//")
sample <- read.csv(fileName,  header=T)
summary(sample)
xAxis <- c(sample$Hours.taken)
dat <- data.frame(
Hours = factor(xAxis, levels=xAxis),
Precision = sample$Average.Precision_PV,
Recall = sample$Average.Recall_PV
)
dat.m <- melt(dat, id.vars = "Hours")
ggplot(dat.m, aes(x=Hours, y=value, group=variable)) +
xlab("Elapsed hours") +
ylab("average precision or recall (%)") +
ggtitle("Precision and Recall by time")+
theme_bw()+
theme(legend.justification=c(1,0), legend.position=c(1,0))+
geom_point(aes(shape=variable), size=4.0)+
geom_line(aes(linetype=variable), size=1.0)+
scale_shape_manual(values=c(1,2))+
scale_linetype_manual(values=c("solid","dashed"))
xAxis <- as.numeric(sample$Hours.taken)
dat <- data.frame(
Hours = factor(xAxis, levels=xAxis),
Precision = sample$Average.Precision_PV,
Recall = sample$Average.Recall_PV
)
dat.m <- melt(dat, id.vars = "Hours")
ggplot(dat.m, aes(x=Hours, y=value, group=variable)) +
xlab("Elapsed hours") +
ylab("average precision or recall (%)") +
ggtitle("Precision and Recall by time")+
theme_bw()+
theme(legend.justification=c(1,0), legend.position=c(1,0))+
geom_point(aes(shape=variable), size=4.0)+
geom_line(aes(linetype=variable), size=1.0)+
scale_shape_manual(values=c(1,2))+
scale_linetype_manual(values=c("solid","dashed"))
xAxis <- as.numeric(sample$Hours.taken)
dat <- data.frame(
Hours = as.numeric(xAxis, levels=xAxis),
Precision = sample$Average.Precision_PV,
Recall = sample$Average.Recall_PV
)
dat.m <- melt(dat, id.vars = "Hours")
ggplot(dat.m, aes(x=Hours, y=value, group=variable)) +
xlab("Elapsed hours") +
ylab("average precision or recall (%)") +
ggtitle("Precision and Recall by time")+
theme_bw()+
theme(legend.justification=c(1,0), legend.position=c(1,0))+
geom_point(aes(shape=variable), size=4.0)+
geom_line(aes(linetype=variable), size=1.0)+
scale_shape_manual(values=c(1,2))+
scale_linetype_manual(values=c("solid","dashed"))
dat.m
xAxis <- as.numeric(sample$Hours.taken)
dat <- data.frame(
Hours = as.numeric(xAxis, levels=xAxis),
Precision = sample$Average.Precision_PV,
Recall = sample$Average.Recall_PV
)
dat.m <- melt(dat, id.vars = "Hours")
ggplot(dat.m, aes(x=Hours, y=value, group=variable)) +
xlab("Elapsed hours") +
ylab("average precision or recall (%)") +
ggtitle("Precision and Recall by time")+
theme_bw()+
theme(legend.justification=c(1,0), legend.position=c(1,0))+
geom_point(aes(shape=variable), size=4.0)+
geom_line(aes(linetype=variable), size=1.0)+
scale_shape_manual(values=c(1,2))+
scale_linetype_manual(values=c("solid","dashed"))+
scale_x_continuous(breaks = round(seq(min(0), max(160), by = 7),1)) +
scale_y_continuous(breaks = round(seq(min(30), max(100), by = 5),1))
load("C:/firefly/MonteCarloSimulation/.RData")
#-----------------------------------------------------------------------------
# SPEED Analysis
library(reshape2)
fileName ="speedAnalysis.csv"
setwd("C://firefly//SpeedAnalysis//")
sample <- read.csv(fileName,  header=T)
summary(sample)
xAxis <- as.numeric(sample$Hours.taken)
dat <- data.frame(
Hours = as.numeric(xAxis, levels=xAxis),
Precision = sample$Average.Precision_PV,
Recall = sample$Average.Recall_PV
)
dat.m <- melt(dat, id.vars = "Hours")
ggplot(dat.m, aes(x=Hours, y=value, group=variable)) +
xlab("Elapsed hours") +
ylab("average precision or recall (%)") +
ggtitle("Precision and Recall by time")+
theme_bw()+
theme(legend.justification=c(1,0), legend.position=c(1,0))+
geom_point(aes(shape=variable), size=4.0)+
geom_line(aes(linetype=variable), size=1.0)+
scale_shape_manual(values=c(1,2))+
scale_linetype_manual(values=c("solid","dashed"))+
scale_x_continuous(breaks = round(seq(min(0), max(160), by = 7),1)) +
scale_y_continuous(breaks = round(seq(min(30), max(100), by = 5),1))
#-----------------------------------------------------------------------------
# SPEED Analysis
#plotting
install.packages('Rcpp')
install.packages('ggplot2')
library(ggplot2)
library(reshape2)
fileName ="speedAnalysis.csv"
setwd("C://firefly//SpeedAnalysis//")
sample <- read.csv(fileName,  header=T)
summary(sample)
xAxis <- as.numeric(sample$Hours.taken)
dat <- data.frame(
Hours = as.numeric(xAxis, levels=xAxis),
Precision = sample$Average.Precision_PV,
Recall = sample$Average.Recall_PV
)
dat.m <- melt(dat, id.vars = "Hours")
ggplot(dat.m, aes(x=Hours, y=value, group=variable)) +
xlab("Elapsed hours") +
ylab("average precision or recall (%)") +
ggtitle("Precision and Recall by time")+
theme_bw()+
theme(legend.justification=c(1,0), legend.position=c(1,0))+
geom_point(aes(shape=variable), size=4.0)+
geom_line(aes(linetype=variable), size=1.0)+
scale_shape_manual(values=c(1,2))+
scale_linetype_manual(values=c("solid","dashed"))+
scale_x_continuous(breaks = round(seq(min(0), max(160), by = 7),1)) +
scale_y_continuous(breaks = round(seq(min(30), max(100), by = 5),1))
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("Rcpp")
