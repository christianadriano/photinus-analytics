}
dataf<- loadAnswers("answerList_photinus_data.csv");
summary(dataf);
source('~/.active-rstudio-document', echo=TRUE)
dataf<- loadAnswers("answerList_photinus_data.csv");
summary(dataf);
count.fields(dataf$TP,dataf$Answer.confidence=5) # + count.fields(dataf$TN)
countcount.fields
?countcount.fields
?countcount.fields
?countcount.fields ?
;
count.fields?
;
? count.fields
count lines
? count lines
? count
sum(dataf$TP)
sum(dataf$TP[])
dataf$TP
cont(dataf$TP)
count(dataf$TP)
size(dataf$TP)
length(dataf$TP)
length(dataf$TP)
sum(dataf$TP[])
sum(dataf$TP)
sum(dataf$TP[])
summary(dataf$TP)
loadAnswers<- function(fileName){
setwd("C://Users//chris//OneDrive//Documentos//GitHub//photinus-analytics//correlationGraphs//");
data_all <- read.csv(fileName,header = TRUE,sep=",");
dataf = data.frame(data_all);
return(dataf);
}
#
dataf<- loadAnswers("answerList_photinus_data.csv");
summary(dataf);
summary(dataf$TP)
dataf<- loadAnswers("answerList_photinus_data.csv");
dataf<- loadAnswers("answerList_photinus_data.csv");
summary(dataf$TP)
length(dataf$TP)
? aggregate
aggregate(.~dataf$TP, data=total, sum)
aggregate(.~dataf$TP, data=sum)
aggregate(.~dataf$TP[], data=sum)
sum(dataf$TP)
countNumbers(dataf$TP)
dataf_confidence <- dataf [(dataf$Answer.confidence==5) ,];
countNumbers(dataf_confidence)
dataf_confidence
countNumbers(dataf_confidence$TP)
computeAccuracy <- function(dataf,x){
dataf_confidence <- dataf [(x) ,];
}
dataf_confidence <- computeAccuracy(dataf,dataf$Answer.confidence==5)
countNumbers(dataf_confidence$TP)
dataf_conf <- computeAccuracy(dataf,dataf$Answer.confidence==3)
countNumbers(dataf_conf$TP)
computeAccuracy <- function(dataf,lineNumbers){
dataf_confidence <- dataf [(lineNumbers) ,];
TP <- sum(dataf_confidence$TP);
TN <- sum(dataf_confidence$TN);
FP <- sum(dataf_confidence$FP);
FN <- sum(dataf_confidence$FN);
Accuracy <- (TP+TN) /(TP+TN+FP+FN);
}
computeAccuracy <- function(dataf,lineNumbers){
dataf_confidence <- dataf [(lineNumbers) ,];
TP <- sum(dataf_confidence$TP);
TN <- sum(dataf_confidence$TN);
FP <- sum(dataf_confidence$FP);
FN <- sum(dataf_confidence$FN);
Accuracy <- (TP+TN) /(TP+TN+FP+FN);
return (Accuracy);
}
computeAccuracy(dataf,dataf$Answer.confidence==3)
computeAccuracy(dataf,dataf$Answer.confidence==2)
computeAccuracy(dataf,dataf$Answer.confidence==1)
computeAccuracy(dataf,dataf$Answer.confidence==4)
computeAccuracy(dataf,dataf$Answer.confidence==5)
dataf_confidence <- dataf [(dataf$Answer.confidence==5) ,];
TP <- sum(dataf_confidence$TP)
TP
TN <- sum(dataf_confidence$TN);
TN
countNumbers(dataf$TP)
1288+89
dataf<- loadAnswers("answerList_photinus_data.csv");
countNumbers(dataf$TP)
dataf$TP
summarize(dataf$TP)
summary(dataf$TP)
summary(dataf$TN)
countNumbers(dataf$TN)
611+766
str(dataf$TP)
dataf<- loadAnswers("answerList_photinus_data.csv");
summary(dataf);
dataf$counter
countNumbers(dataf$counter)
length(dataf$counter)
setwd("C://Users//chris//OneDrive//Documentos//GitHub//photinus-analytics//correlationGraphs//");
data_all <- read.csv(fileName,header = TRUE,sep=",");
length(data_all)
length(data_all.counter)
length(data_all[1:]
length(data_all[1,]
;
length(data_all[;,]
length(data_all[;]
length(data_all[,1];
length(data_all[,1]
;
length(data_all[,1])
summary(data_all)
setwd("C://Users//chris//OneDrive//Documentos//GitHub//photinus-analytics//correlationGraphs//answerList_photinus_data.csv");
data_all <- read.csv(fileName,header = TRUE,sep=",");
summary(data_all);
setwd("C://Users//chris//OneDrive//Documentos//GitHub//photinus-analytics//correlationGraphs//answerList_photinus_data.csv");
setwd("C://Users//chris//OneDrive//Documentos//GitHub//photinus-analytics//correlationGraphs//answerList_photinus_data.csv");
data_all <- read.csv(fileName,header = TRUE,sep=",");
summary(data_all);
setwd("C://Users//chris//OneDrive//Documentos//GitHub//photinus-analytics//correlationGraphs//answerList_photinus_data.csv");
setwd("C://Users//chris//OneDrive//Documentos//GitHub//photinus-analytics//correlationGraphs//");
data_all <- read.csv("answerList_photinus_data.csv",header = TRUE,sep=",");
summary(data_all);
setwd("C://Users//chris//OneDrive//Documentos//GitHub//photinus-analytics//correlationGraphs//");
data_all <- read.csv("answerList_photinus_data.csv",header = TRUE,sep=",");
setwd("C://Users//chris//OneDrive//Documentos//GitHub//photinus-analytics//correlationGraphs//");
data_all <- read.csv("answerList_photinus_data.csv",header = TRUE,sep=",");
summary(data_all);
dataf = data.frame(data_all);
length(dataf$TP)
setwd("C://Users//chris//OneDrive//Documentos//GitHub//photinus-analytics//correlationGraphs//");
data_all <- read.csv("answerList_photinus_data_test.csv",header = TRUE,sep=",");
summary(data_all);
dataf = data.frame(data_all);
length(dataf$TP)
setwd("C://Users//chris//OneDrive//Documentos//GitHub//photinus-analytics//correlationGraphs//");
data_all <- read.csv("answerList_data.csv",header = TRUE,sep=",");
dataf = data.frame(data_all);
length(dataf$TP)
computeAccuracy <- function(dataf,lineNumbers){
dataf_confidence <- dataf [(lineNumbers) ,];
TP <- sum(dataf_confidence$TP);
TN <- sum(dataf_confidence$TN);
FP <- sum(dataf_confidence$FP);
FN <- sum(dataf_confidence$FN);
Accuracy <- (TP+TN) /(TP+TN+FP+FN);
return (Accuracy);
}
loadAnswers<- function(fileName){
setwd("C://Users//chris//OneDrive//Documentos//GitHub//photinus-analytics//correlationGraphs//");
data_all <- read.csv(fileName,header = TRUE,sep=",");
countNumbers(data_all.TP)
dataf = data.frame(data_all);
return(dataf);
}
dataf<- loadAnswers("answerList_data.csv");
summary(dataf);
length(dataf$TP)
length(dataf$TP)
dataf<- loadAnswers("answerList_data.csv");
summary(dataf);
dataf<- loadAnswers("answerList_data.csv");
summary(dataf);
dataf<- loadAnswers("answerList_photinus_data_test.csv");
loadAnswers<- function(fileName){
setwd("C://Users//chris//OneDrive//Documentos//GitHub//photinus-analytics//correlationGraphs//");
data_all <- read.csv(fileName,header = TRUE,sep=",");
dataf = data.frame(data_all);
return(dataf);
}
dataf<- loadAnswers("answerList_photinus_data_test.csv");
summary(dataf);
dataf<- loadAnswers("answerList_data.csv");
dataf<- loadAnswers("answerList_photinus_data.csv");
summary(dataf);
computeAccuracy <- function(dataf,lineNumbers){
dataf_confidence <- dataf [(lineNumbers) ,];
TP <- sum(dataf_confidence$TP);
TN <- sum(dataf_confidence$TN);
FP <- sum(dataf_confidence$FP);
FN <- sum(dataf_confidence$FN);
Accuracy <- (TP+TN) /(TP+TN+FP+FN);
return (Accuracy);
}
accuracyList<- c[computeAccuracy(dataf,dataf$Answer.confidence==5),
computeAccuracy(dataf,dataf$Answer.confidence==4),
computeAccuracy(dataf,dataf$Answer.confidence==3),
computeAccuracy(dataf,dataf$Answer.confidence==2),
computeAccuracy(dataf,dataf$Answer.confidence==1)];
header<-c[5,4,3,2,1];
accuracyList<- c(computeAccuracy(dataf,dataf$Answer.confidence==5),
computeAccuracy(dataf,dataf$Answer.confidence==4),
computeAccuracy(dataf,dataf$Answer.confidence==3),
computeAccuracy(dataf,dataf$Answer.confidence==2),
computeAccuracy(dataf,dataf$Answer.confidence==1));
header<-c[5,4,3,2,1];
header<-c(5,4,3,2,1);
confidenceTable<-cbind(header,accuracyList);
confidenceTable
accuracyList<- c(computeAccuracy(dataf,dataf$Answer.difficulty==1),
computeAccuracy(dataf,dataf$Answer.difficulty==2),
computeAccuracy(dataf,dataf$Answer.difficulty==3),
computeAccuracy(dataf,dataf$Answer.difficulty==4),
computeAccuracy(dataf,dataf$Answer.difficulty==5));
difficultyTable<-cbind(header,accuracyList);
difficultyTable
plot(header,difficultyTable[,2])
plot(header,difficultyTable[,2],confidenceTable[,2])
plot(header,difficultyTable[,2])
plot(header,confidenceTable[,2])
dataf<- loadAnswers("answerList_photinus_data.csv");
#Check if total answers is 2580
length(dataf$TP)
dataf <- dataf [!(dataf$Answer.option=="IDK") ,];
length(dataf$TP)
accuracyList<- c(computeAccuracy(dataf,dataf$Answer.confidence==1),
computeAccuracy(dataf,dataf$Answer.confidence==2),
computeAccuracy(dataf,dataf$Answer.confidence==3),
computeAccuracy(dataf,dataf$Answer.confidence==4),
computeAccuracy(dataf,dataf$Answer.confidence==5));
header<-c(1,2,3,4,5);
confidenceTable<-cbind(header,accuracyList);
accuracyList<- c(computeAccuracy(dataf,dataf$Answer.difficulty==1),
computeAccuracy(dataf,dataf$Answer.difficulty==2),
computeAccuracy(dataf,dataf$Answer.difficulty==3),
computeAccuracy(dataf,dataf$Answer.difficulty==4),
computeAccuracy(dataf,dataf$Answer.difficulty==5));
difficultyTable<-cbind(header,accuracyList);
difficultyTable
confidenceTable
length(dataf$TP)
dataf<- loadAnswers("answerList_photinus_data.csv");
length(dataf$TP)
length(dataf$Answer.difficulty==1)
length(dataf[dataf$Answer.difficulty==1],1)
datafdiff<-dataf[dataf$Answer.difficulty==1],1)
datafdiff<-dataf[(dataf$Answer.difficulty==1),1)
datafdiff<-dataf[(dataf$Answer.difficulty==1),1]
length(datafdiff)
datafdiff<-dataf[(dataf$Answer.difficulty==5),1]
length(datafdiff)
dataf <- dataf [!(dataf$Answer.option=="IDK") ,];
datafdiff<-dataf[(dataf$Answer.difficulty==5),1]
length(datafdiff)
computeAccuracy(dataf,dataf$Answer.difficulty==5))
computeAccuracy(dataf,dataf$Answer.difficulty==5)
dataf<- loadAnswers("answerList_photinus_data.csv");
#Check if total answers is 2580
length(dataf$TP)
dataf <- dataf [!(dataf$Answer.option=="IDK") ,];
accuracyList<- c(computeAccuracy(dataf,dataf$Answer.confidence==1),
computeAccuracy(dataf,dataf$Answer.confidence==2),
computeAccuracy(dataf,dataf$Answer.confidence==3),
computeAccuracy(dataf,dataf$Answer.confidence==4),
computeAccuracy(dataf,dataf$Answer.confidence==5));
header<-c(1,2,3,4,5);
confidenceTable<-cbind(header,accuracyList);
accuracyList<- c(computeAccuracy(dataf,dataf$Answer.difficulty==1),
computeAccuracy(dataf,dataf$Answer.difficulty==2),
computeAccuracy(dataf,dataf$Answer.difficulty==3),
computeAccuracy(dataf,dataf$Answer.difficulty==4),
computeAccuracy(dataf,dataf$Answer.difficulty==5));
difficultyTable<-cbind(header,accuracyList);
confidenceTable<-cbind(header,accuracyList);
confidenceTable
accuracyList<- c(computeAccuracy(dataf,dataf$Answer.confidence==1),
computeAccuracy(dataf,dataf$Answer.confidence==2),
computeAccuracy(dataf,dataf$Answer.confidence==3),
computeAccuracy(dataf,dataf$Answer.confidence==4),
computeAccuracy(dataf,dataf$Answer.confidence==5));
header<-c(1,2,3,4,5);
confidenceTable<-cbind(header,accuracyList);
confidenceTable
selectConnfusionVector <- function(dataf,lineNumbers){
dataf_confidence <- dataf [(lineNumbers) ,];
TP <- sum(dataf_confidence$TP);
TN <- sum(dataf_confidence$TN);
FP <- sum(dataf_confidence$FP);
FN <- sum(dataf_confidence$FN);
outcome<- c(TP,TN,FP,FN);
header<- c("TP","TN","FP","FN");
outcome.frame <- data.frame(cbind(header,outcome));
return (outcome.frame);
}
out <-selectConnfusionVector(computeAccuracy(dataf,dataf$Answer.confidence==1)
;
out <-selectConnfusionVector(computeAccuracy(dataf,dataf$Answer.confidence==1));
out <-selectConnfusionVector(dataf,dataf$Answer.confidence==1);
oug
out
selectConnfusionVector <- function(dataf,lineNumbers){
dataf_confidence <- dataf [(lineNumbers) ,];
TP <- sum(dataf_confidence$TP);
TN <- sum(dataf_confidence$TN);
FP <- sum(dataf_confidence$FP);
FN <- sum(dataf_confidence$FN);
outcome<- c(TP,TN,FP,FN);
header<- c("TP","TN","FP","FN");
outcome.frame <- data.frame(header,outcome);
return (outcome.frame);
}
out <-selectConnfusionVector(dataf,dataf$Answer.confidence==1);
out
outcome.frame <- data.frame(TP,TN,FP,FN);
selectConnfusionVector <- function(dataf,lineNumbers){
dataf_confidence <- dataf [(lineNumbers) ,];
TP <- sum(dataf_confidence$TP);
TN <- sum(dataf_confidence$TN);
FP <- sum(dataf_confidence$FP);
FN <- sum(dataf_confidence$FN);
outcome<- c(TP,TN,FP,FN);
header<- c("TP","TN","FP","FN");
outcome.frame <- data.frame(TP,TN,FP,FN);
return (outcome.frame);
}
out <-selectConnfusionVector(dataf,dataf$Answer.confidence==1);
out
#Compute accuracy for each level of difficulty and confidence
computeAccuracy<- function(df){
return((df$TP+df$TN)/(df$TP+df$TN+df$FP+df$FN));
}
#Compute precision for each level of difficulty and confidence
computePrecision<- function(df){
return((df$TP)/(df$TP+df$FP));
}
#Select TP, TN, FP, FN for the item
selectConnfusionVector <- function(dataf,lineNumbers){
dataf_confidence <- dataf [(lineNumbers) ,];
TP <- sum(dataf_confidence$TP);
TN <- sum(dataf_confidence$TN);
FP <- sum(dataf_confidence$FP);
FN <- sum(dataf_confidence$FN);
outcome.df <- data.frame(TP,TN,FP,FN);
return (outcome.df);
}
compute<- function(dataframe,filterName){}
accuracyList<- c(computeAccuracy(dataf,dataf$Answer.confidence==1),
computeAccuracy(dataf,dataf$Answer.confidence==2),
computeAccuracy(dataf,dataf$Answer.confidence==3),
computeAccuracy(dataf,dataf$Answer.confidence==4),
computeAccuracy(dataf,dataf$Answer.confidence==5));
header<-c(1,2,3,4,5);
confidenceTable<-cbind(header,accuracyList);
accuracyList<- c(computeAccuracy(dataf,dataf$Answer.difficulty==1),
computeAccuracy(dataf,dataf$Answer.difficulty==2),
computeAccuracy(dataf,dataf$Answer.difficulty==3),
computeAccuracy(dataf,dataf$Answer.difficulty==4),
computeAccuracy(dataf,dataf$Answer.difficulty==5));
difficultyTable<-cbind(header,accuracyList);
print("##### filterName ###### ");
print("confidence");
print(confidenceTable);
print("difficulty");
print(confidenceTable);
}
dataframe <- data.frame(one,two, three, four, five);
dataframe <- data.frame(one=double(),two=double(), three=double(), four=double(), five=double());
dataframe[1]
dataframe[1]=2
dataframe[1]<-2
dataframe[1,]<-2
dataframe
dataframe[1,1]<-2
dataframe[1,1]<-3
dataframe
sum(dataframe[1,])
dataframe[2,1]<-2
dataframe
filterName<-"confidence"
print("#####", filterName, "###### ");
print("#####"+ filterName+ "###### ");
print("#####".contact( filterName+ "###### ");
print("ddd")
print(filterName);
#Select TP, TN, FP, FN for the item
selectOutcomes <- function(dataf,lineNumbers){
dataf_confidence <- dataf [(lineNumbers) ,];
TP <- sum(dataf_confidence$TP);
TN <- sum(dataf_confidence$TN);
FP <- sum(dataf_confidence$FP);
FN <- sum(dataf_confidence$FN);
outcome.df <- data.frame(TP,TN,FP,FN);
return (outcome.df);
}
#Compute accuracy for each level of difficulty and confidence
computeAccuracy<- function(df){
return((df$TP+df$TN)/(df$TP+df$TN+df$FP+df$FN));
}
#Compute precision for each level of difficulty and confidence
computePrecision<- function(df){
return((df$TP)/(df$TP+df$FP));
}
#Compute precision for each level of difficulty and confidence
computeRecall<- function(df){
return((df$TP)/(df$TP+df$FN));
}
computeStats<- function(df,selection, filterName){
dataframe <- data.frame(one=double(),two=double(), three=double(), four=double(), five=double());
for(i in 1:5){
outcomesDF<- selectOutcomes(df,selection==i);
dataframe[1,i]<-c(computeAccuracy(outcomesDF));
dataframe[2,i]<-c(computePrecision(outcomesDF));
dataframe[3,i]<-c(computeRecall(outcomesDF));
dataframe[4,i]<-c(sum(outcomesDF[1,]));
}
print(filterName);
print(dataframe);
}
computeStats(dataf,df$Answer.confidence,"All Answers - confidence");
dataf<- loadAnswers("answerList_photinus_data.csv");
computeStats(dataf,df$Answer.confidence,"All Answers - confidence");
outcomesDF<-selectOutcomes(df,df$Answer.confidence==1);
outcomesDF
dataf_confidence <- dataf [(dataf$Answer.confidence==1) ,];
dataf_confidence
dataf_confidence <- dataf [(dataf$Answer.confidence==1) ,];
TP<- sum(dataf_confidence$TP)
TP
outcomesDF<- selectOutcomes(df,dataf$Answer.confidence==1);
outcomesDF
outcomesDF<- selectOutcomes(dataf,dataf$Answer.confidence==1);
outcomesDF
computeStats<- function(df,selection, filterName){
dataframe <- data.frame(one=double(),two=double(), three=double(), four=double(), five=double());
for(i in 1:5){
outcomesDF<- selectOutcomes(df,selection==i);
dataframe[1,i]<-c(computeAccuracy(outcomesDF));
dataframe[2,i]<-c(computePrecision(outcomesDF));
dataframe[3,i]<-c(computeRecall(outcomesDF));
dataframe[4,i]<-c(sum(outcomesDF[1,]));
}
print(filterName);
print(dataframe);
}
computeStats(dataf,dataf$Answer.confidence,"All Answers - confidence");
computeStats<- function(df,selection, filterName){
dataframe <- data.frame(one=double(),two=double(), three=double(), four=double(), five=int());
for(i in 1:5){
outcomesDF<- selectOutcomes(df,selection==i);
dataframe[1,i]<-c(computeAccuracy(outcomesDF));
dataframe[2,i]<-c(computePrecision(outcomesDF));
dataframe[3,i]<-c(computeRecall(outcomesDF));
dataframe[4,i]<-c(sum(outcomesDF[1,]));
}
print(filterName);
print(dataframe);
}
computeStats(dataf,dataf$Answer.confidence,"All Answers - confidence");
int
computeStats<- function(df,selection, filterName){
dataframe <- data.frame(one=double(),two=double(), three=double(), four=double(), five=integer());
for(i in 1:5){
outcomesDF<- selectOutcomes(df,selection==i);
dataframe[1,i]<-c(computeAccuracy(outcomesDF));
dataframe[2,i]<-c(computePrecision(outcomesDF));
dataframe[3,i]<-c(computeRecall(outcomesDF));
dataframe[4,i]<-c(sum(outcomesDF[1,]));
}
print(filterName);
print(dataframe);
}
computeStats(dataf,dataf$Answer.confidence,"All Answers - confidence");
computeStats<- function(df,selection, filterName){
dataframe <- data.frame(one=double(),two=double(), three=double(), four=double(), five=double());
for(i in 1:5){
outcomesDF<- selectOutcomes(df,selection==i);
dataframe[1,i]<-c(computeAccuracy(outcomesDF));
dataframe[2,i]<-c(computePrecision(outcomesDF));
dataframe[3,i]<-c(computeRecall(outcomesDF));
dataframe[4,i]<-c(integer(sum(outcomesDF[1,])));
}
print(filterName);
print(dataframe);
}
computeStats(dataf,dataf$Answer.confidence,"All Answers - confidence");
computeStats<- function(df,selection, filterName){
dataframe <- data.frame(one=double(),two=double(), three=double(), four=double(), five=double());
for(i in 1:5){
outcomesDF<- selectOutcomes(df,selection==i);
dataframe[1,i]<-c(computeAccuracy(outcomesDF));
dataframe[2,i]<-c(computePrecision(outcomesDF));
dataframe[3,i]<-c(computeRecall(outcomesDF));
dataframe[4,i]<-c(integer(sum(outcomesDF[1,])));
}
print(filterName);
print(dataframe);
}
computeStats(dataf,dataf$Answer.confidence,"All Answers - confidence");
computeStats<- function(df,selection, filterName){
dataframe <- data.frame(one=double(),two=double(), three=double(), four=double(), five=double());
for(i in 1:5){
outcomesDF<- selectOutcomes(df,selection==i);
dataframe[1,i]<-c(computeAccuracy(outcomesDF));
dataframe[2,i]<-c(computePrecision(outcomesDF));
dataframe[3,i]<-c(computeRecall(outcomesDF));
dataframe[4,i]<-c(sum(outcomesDF[1,]));
}
print(filterName);
print(dataframe);
}
computeStats(dataf,dataf$Answer.confidence,"All Answers - confidence");
sum(dataframe[4,])
stats<- computeStats(dataf,dataf$Answer.confidence,"All Answers - confidence");
sum(stats[4,])
dataIDK <- dataf [!(dataf$Answer.option=="IDK") ,];
stats<- computeStats(dataIDK,dataIDK$Answer.confidence,"All Answers - confidence");
