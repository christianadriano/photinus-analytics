?mosaicPlot
predictTable
predictTable <- xtabs(~ hasHypothesis + hypothesis, data=pData )
#Use hasHypothesis and bug_pointing to predict length
chiSquareModel <-loglm( ~ hasHypothesis + hypothesis , data = predictTable, fit=TRUE)
summary(chiSquareModel)
predictTable <- xtabs(~ hasHypothesis + hypothesis, data=pData )
predictTable
predictTable <- xtabs(~ hasHypothesis + hypothesis +bug_covering, data=pData )
predictTable
predictTable <- xtabs(~ hasHypothesis  +bug_covering, data=pData )
predictTable
?loglm
?t.test
?cor
mData <-read.csv(file="C:/Users/adrianoc/Dropbox (PE-C)/2.Classes-UCI/8. Spring2015/INF205_QuantitativeAnalysis/finalProject/curatedTotal.csv", header=T)
cor.test(mData$length, mData$duration , method="pearson")
?lm
eData <-read.csv(file="C:/Users/adrianoc/Dropbox (PE-C)/2.Classes-UCI/8. Spring2015/INF205_QuantitativeAnalysis/finalProject/explanationsOriginalCSV.csv", header=T)
summary(eData)
#plotting
#install.packages('ggplot2', dep=TRUE, lib=NULL)
#library(ggplot2)
ggplot(log(eData), aes(duration)) + geom_histogram(binwidth=1)
library(ggplot2)
eData <-read.csv(file="C:/Users/adrianoc/Dropbox (PE-C)/2.Classes-UCI/8. Spring2015/INF205_QuantitativeAnalysis/finalProject/explanationsOriginalCSV.csv", header=T)
summary(eData)
#plotting
#install.packages('ggplot2', dep=TRUE, lib=NULL)
#library(ggplot2)
ggplot(log(eData), aes(duration)) + geom_histogram(binwidth=1)
ggplot(log10(eData), aes(length)) + geom_histogram(binwidth=1)
ggplot(log10(eData), aes(length)) + geom_histogram(binwidth=1)
ggplot(log(eData), aes(length)) + geom_histogram(binwidth=1)
ggplot(log(eData), aes(duration)) + geom_histogram(binwidth=0.1)
nhData <-read.csv(file="C:/Users/adrianoc/Dropbox (PE-C)/2.Classes-UCI/8. Spring2015/INF205_QuantitativeAnalysis/finalProject/NOhypothesisCurated.csv", header=T)
lm(length ~ duration, log(nhData))
lm(length ~ duration, log(nhData))
#Regression
lm(length ~ duration, log(nhData))
pData <-read.csv(file="C:/Users/adrianoc/Dropbox (PE-C)/2.Classes-UCI/8. Spring2015/INF205_QuantitativeAnalysis/finalProject/explanationsCurated_predictHypothesis200lengthCSV.csv", header=T)
summary(pData)
library(car)
levene.test(pData$length,pData$hasHypothesis,center=median)
#Predicting hypothesis-based from duration
hypothesisModel <-aov( length ~ hasHypothesis, data = log(pData))
summary(hypothesisModel)
plot(hypothesisModel)
pData <-read.csv(file="C:/Users/adrianoc/Dropbox (PE-C)/2.Classes-UCI/8. Spring2015/INF205_QuantitativeAnalysis/finalProject/explanationsCurated_predictHypothesis200lengthCSV.csv", header=T)
summary(pData)
library(car)
levene.test(pData$length,pData$hasHypothesis,center=median)
#Predicting hypothesis-based from duration
hypothesisModel <-aov( length ~ hasHypothesis, data = log(pData))
summary(hypothesisModel)
plot(hypothesisModel)
library(car)
levene.test(pData$length,pData$hasHypothesis,center=median)
#Predicting hypothesis-based from duration
hypothesisModel <-aov( length ~ hasHypothesis, data = log(pData))
summary(hypothesisModel)
summary(hypothesisModel)
plot(hypothesisModel)
summary(hypothesisModel)
#Predicting hypothesis-based from duration
hypothesisModel <-aov( length ~ hasHypothesis, data = pData)
summary(hypothesisModel)
hypothesisModel <-aov( length ~ hasHypothesis, data = pData)
summary(hypothesisModel)
plot(hypothesisModel)
plot(hypothesisModel)
hypothesisModel <-aov( length ~ hasHypothesis, data = log(pData)
summary(hypothesisModel)
plot(hypothesisModel)
#Predicting hypothesis-based from duration
hypothesisModel <-aov( length ~ hasHypothesis, data = log(pData))
summary(hypothesisModel)
plot(hypothesisModel)
cData <-read.csv(file="C:/Users/adrianoc/Dropbox (PE-C)/2.Classes-UCI/8. Spring2015/INF205_QuantitativeAnalysis/finalProject/explanationsCuratedCSV.csv", header=T)
summary(cData)
cor.test(log(cData$length),log(cData$duration), method="pearson")
cor(log(cData$length),log(cData$duration), method="pearson")
corData <- cor(log(cData$length),log(cData$duration), method="pearson")
summary(corData)
eData <-read.csv(file="C:/Users/adrianoc/Dropbox (PE-C)/2.Classes-UCI/8. Spring2015/INF205_QuantitativeAnalysis/finalProject/explanationsOriginalCSV.csv", header=T)
summary(eData)
ggplot((eData), aes(duration)) + geom_boxplot(outlier.color="red")
library(ggplot2)
ggplot((eData), aes(duration)) + geom_boxplot(outlier.color="red")
ggplot(log(eData), aes(duration)) + geom_histogram(binwidth=0.1)
ggplot(log(eData), aes(length)) + geom_histogram(binwidth=0.1)
ggplot(log10(eData), aes(length)) + geom_histogram(binwidth=0.1)
ggplot(log10(eData), aes(length)) + geom_histogram(binwidth=0.01)
ggplot(log10(eData), aes(length)) + geom_histogram(binwidth=0.1)
sd(eData$duration)
sd(eData$length)
boxplot(eData$duration)
x<-eData$duration
x[!x %in% boxplot.stats(x)$out]
boxplot(x)
boxplot(x)
remove_outliers <- function(x, na.rm = TRUE, ...) {
qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
y <- x
y[x < (qnt[1] - H)] <- NA
y[x > (qnt[2] + H)] <- NA
y
}
curatedDuration <- remove_outliers(eData$duration)
boxplot(curatedDuration)
ggplot((curatedDuration), aes(duration)) + geom_histogram(binwidth=0.1)
ggplot(curatedDuration, aes(duration) + geom_histogram(binwidth=0.1)
ggplot(curatedDuration, aes(duration)) + geom_histogram(binwidth=0.1)
ggplot(curatedDuration) + geom_histogram(binwidth=0.1)
label <- c("durartion")
curatedDuration <- label
ggplot(curatedDuration, aes(duration)) + geom_histogram(binwidth=0.1)
eData <-read.csv(file="C:/Users/adrianoc/Dropbox (PE-C)/2.Classes-UCI/8. Spring2015/INF205_QuantitativeAnalysis/finalProject/explanationsOriginalCSV.csv", header=T)
summary(eData)
curatedDuration <- remove_outliers(eData$duration)
label <- c("duration")
curatedDuration <- label
boxplot(curatedDuration)
boxplot(curatedDuration)
curatedDuration
eData <-read.csv(file="C:/Users/adrianoc/Dropbox (PE-C)/2.Classes-UCI/8. Spring2015/INF205_QuantitativeAnalysis/finalProject/explanationsOriginalCSV.csv", header=T)
curatedDuration <- remove_outliers(eData$duration)
label <- c("duration")
names(curatedDuration) <- label
boxplot(curatedDuration)
ggplot(curatedDuration, aes(duration)) + geom_histogram(binwidth=0.1)
sd(curatedDuration)
curatedDuration
tData <-read.csv(file="C:/Users/adrianoc/Dropbox (PE-C)/2.Classes-UCI/8. Spring2015/INF205_QuantitativeAnalysis/finalProject/explanationsLogTransformedCSV.csv", header=T)
summary(tData)
tData
tData <-read.csv(file="C:/Users/adrianoc/Dropbox (PE-C)/2.Classes-UCI/8. Spring2015/INF205_QuantitativeAnalysis/finalProject/explanationsLogTransformedCSV.csv", header=T)
summary(tData)
ggplot((tData), aes(duration)) + geom_histogram(binwidth=0.1)
ggplot((tData), aes(dur)) + geom_histogram(binwidth=0.1)
source('~/.active-rstudio-document')
ggplot((tData), aes(len)) + geom_histogram(binwidth=0.1)
#load log2 transform file
tData <-read.csv(file="C:/Users/adrianoc/Dropbox (PE-C)/2.Classes-UCI/8. Spring2015/INF205_QuantitativeAnalysis/finalProject/explanationsLogTransformedCSV.csv", header=T)
summary(tData)
ggplot((tData), aes(dur)) + geom_histogram(binwidth=0.1)
ggplot((tData), aes(dur)) + geom_histogram(binwidth=0.1)
oad log2 transform file
tData <-read.csv(file="C:/Users/adrianoc/Dropbox (PE-C)/2.Classes-UCI/8. Spring2015/INF205_QuantitativeAnalysis/finalProject/explanationsLogTransformedCSV.csv", header=T)
summary(tData)
tData <-read.csv(file="C:/Users/adrianoc/Dropbox (PE-C)/2.Classes-UCI/8. Spring2015/INF205_QuantitativeAnalysis/finalProject/explanationsLogTransformedCSV.csv", header=T)
summary(tData)
tData <-read.csv(file="C:/Users/adrianoc/Dropbox (PE-C)/2.Classes-UCI/8. Spring2015/INF205_QuantitativeAnalysis/finalProject/explanationsLogTransformedCSV.csv", header=T)
summary(tData)
ggplot((tData), aes(dur)) + geom_histogram(binwidth=0.1)
tData <-read.csv(file="C:/Users/adrianoc/Dropbox (PE-C)/2.Classes-UCI/8. Spring2015/INF205_QuantitativeAnalysis/finalProject/explanationsLogTransformedCSV.csv", header=T)
summary(tData)
ggplot((tData), aes(dur)) + geom_histogram(binwidth=0.1)
ggplot((tData), aes(len)) + geom_histogram(binwidth=0.1)
tData <-read.csv(file="C:/Users/adrianoc/Dropbox (PE-C)/2.Classes-UCI/8. Spring2015/INF205_QuantitativeAnalysis/finalProject/explanationsLogTransformedCSV.csv", header=T)
summary(tData)
ggplot((tData), aes(dur)) + geom_histogram(binwidth=0.1)
ggplot((tData), aes(len)) + geom_histogram(binwidth=0.1)
ggplot(tData, aes(x=length, y=duration)) + geom_point(shape=1) +  geom_smooth()
#load log2 transform file
tData <-read.csv(file="C:/Users/adrianoc/Dropbox (PE-C)/2.Classes-UCI/8. Spring2015/INF205_QuantitativeAnalysis/finalProject/explanationsLogTransformedCSV.csv", header=T)
summary(tData)
ggplot(tData, aes(x=len, y=duration)) + geom_point(shape=1) +  geom_smooth()
ggplot(tData, aes(x=length, y=duration)) + geom_point(shape=1) +  geom_smooth()
corData <- cor((tData$length),(tData$duration), method="pearson")
summary(corData)
cor((tData$length),(tData$duration), method="pearson")
ggplot((tData), aes(dur)) + geom_histogram(binwidth=0.1)
ggplot((tData), aes(duration)) + geom_histogram(binwidth=0.1)
ggplot((tData), aes(length)) + geom_histogram(binwidth=0.1)
hData <-read.csv(file="C:/Users/adrianoc/Dropbox (PE-C)/2.Classes-UCI/8. Spring2015/INF205_QuantitativeAnalysis/finalProject/hypothesisCurated.csv", header=T)
summary(hData)
nhData <-read.csv(file="C:/Users/adrianoc/Dropbox (PE-C)/2.Classes-UCI/8. Spring2015/INF205_QuantitativeAnalysis/finalProject/NOhypothesisCurated.csv", header=T)
summary(nhData)
# DURATION
hDuration <- data.frame(area = c(hData$duration))
nhDuration <- data.frame(area = c(nhData$duration))
#Now, combine your two dataframes into one.  First make a new column in each.
hDuration$duration <- 'hypothesis duration'
nhDuration$duration <- 'No hypothesis duration'
#and combine into your new data frame forest evolution
combinedDurationVect <- rbind(hDuration, nhDuration)
ggplot(combinedDurationVect, aes(area, fill = duration)) + geom_density(alpha= 0.2) +
ggtitle("Hypothesis versus Non-Hypothesis (seconds)")
hDuration
nhDuration
hData
summary(hData)
hData <-read.csv(file="C:/Users/adrianoc/Dropbox (PE-C)/2.Classes-UCI/8. Spring2015/INF205_QuantitativeAnalysis/finalProject/hypothesisCurated.csv", header=T)
summary(hData)
nhData <-read.csv(file="C:/Users/adrianoc/Dropbox (PE-C)/2.Classes-UCI/8. Spring2015/INF205_QuantitativeAnalysis/finalProject/NOhypothesisCurated.csv", header=T)
summary(nhData)
# DURATION
hDuration <- data.frame(area = c(hData$duration))
nhDuration <- data.frame(area = c(nhData$duration))
#Now, combine your two dataframes into one.  First make a new column in each.
hDuration$duration <- 'hypothesis duration'
nhDuration$duration <- 'No hypothesis duration'
#and combine into your new data frame forest evolution
combinedDurationVect <- rbind(hDuration, nhDuration)
ggplot(combinedDurationVect, aes(area, fill = duration)) + geom_density(alpha= 0.2) +
ggtitle("Hypothesis versus Non-Hypothesis (seconds)")
ggplot(combinedDurationVect, aes(area, fill = duration)) + geom_density(alpha= 1) +
ggtitle("Hypothesis versus Non-Hypothesis (seconds)")
summary(nhData)
summary(hData)
hData <-read.csv(file="C:/Users/adrianoc/Dropbox (PE-C)/2.Classes-UCI/8. Spring2015/INF205_QuantitativeAnalysis/finalProject/hypothesisCurated.csv", header=T)
summary(hData)
nhData <-read.csv(file="C:/Users/adrianoc/Dropbox (PE-C)/2.Classes-UCI/8. Spring2015/INF205_QuantitativeAnalysis/finalProject/NOhypothesisCurated.csv", header=T)
summary(nhData)
# DURATION
hDuration <- data.frame(area = c(hData$duration))
nhDuration <- data.frame(area = c(nhData$duration))
#Now, combine your two dataframes into one.  First make a new column in each.
hDuration$duration <- 'hypothesis duration'
nhDuration$duration <- 'No hypothesis duration'
#and combine into your new data frame forest evolution
combinedDurationVect <- rbind(hDuration, nhDuration)
ggplot(combinedDurationVect, aes(area, fill = duration)) + geom_density(alpha= 0.5) +
ggtitle("Hypothesis versus Non-Hypothesis (seconds)")
hData <-read.csv(file="C:/Users/adrianoc/Dropbox (PE-C)/2.Classes-UCI/8. Spring2015/INF205_QuantitativeAnalysis/finalProject/hypothesisCurated.csv", header=T)
summary(hData)
nhData <-read.csv(file="C:/Users/adrianoc/Dropbox (PE-C)/2.Classes-UCI/8. Spring2015/INF205_QuantitativeAnalysis/finalProject/NOhypothesisCurated.csv", header=T)
summary(nhData)
# DURATION
hDuration <- data.frame(area = c(hData$duration))
nhDuration <- data.frame(area = c(nhData$duration))
#Now, combine your two dataframes into one.  First make a new column in each.
hDuration$duration <- 'Root-cause answer duration'
nhDuration$duration <- 'No Root-cause answer duration'
#and combine into your new data frame forest evolution
combinedDurationVect <- rbind(hDuration, nhDuration)
ggplot(combinedDurationVect, aes(area, fill = duration)) + geom_density(alpha= 0.5) +
ggtitle("Root-cause versus non-Root-cause answer durations")
hLength <- data.frame(area = c(hData$length))
nhLength <- data.frame(area = c(nhData$length))
#Now, combine your two dataframes into one.  First make a new column in each.
hLength$length <- 'Root-cause length'
nhLength$length <- 'Non-Root-cause length'
#and combine into your new data frame forest evolution
combinedLengthVect <- rbind(hLength, nhLength)
ggplot(combinedLengthVect, aes(area, fill = length)) + geom_density(alpha= 0.2) +
ggtitle("Root-cause versus non-Root-cause explanation lenghts")
summary(hData)
summary(hData$duration)
summary(nhData$duration)
summary(hData$length)
summary(nhData$length)
ttest = t.test(hDuration,nhDuration)
names(ttest)
ttest$statistic
ttest$p.value
ttest$estimate
nhSize = nrow(nhDuration)
nSize = nrow(hDuration)
nhSize+nSize - 2
mean(hData$duration)
e
ttest = t.test(hLength,nhLength)
hLength
ttest = t.test(hLength$length,nhLength$length)
#LENGTH
hLength <- data.frame(area = c(hData$length))
nhLength <- data.frame(area = c(nhData$length))
ttest = t.test(hLength$length,nhLength$length)
hLength$length
hLength
ttest = t.test(hLength,nhLength)
ttest$statistic
ttest$p.value
ttest$estimate
hData <-read.csv(file="C:/Users/adrianoc/Dropbox (PE-C)/2.Classes-UCI/8. Spring2015/INF205_QuantitativeAnalysis/finalProject/hypothesisCurated.csv", header=T)
summary(hData)
nhData <-read.csv(file="C:/Users/adrianoc/Dropbox (PE-C)/2.Classes-UCI/8. Spring2015/INF205_QuantitativeAnalysis/finalProject/NOhypothesisCurated.csv", header=T)
summary(nhData)
# DURATION
hDuration <- data.frame(area = c(hData$duration))
nhDuration <- data.frame(area = c(nhData$duration))
ttest = t.test(hDuration,nhDuration)
ttest$statistic
ttest$p.value
ttest$estimate
regModel <- lm(length ~ duration, nhData)
summary(regModel)
ggplot(nhData, aes(y=length, x=duration)) + geom_point(shape=1) +  geom_smooth(method="lm")
regModel <- lm(duration ~length  nhData)
regModel <- lm(duration ~ length , nhData)
summary(regModel)
ggplot(nhData, aes(y=length, x=duration)) + geom_point(shape=1) +  geom_smooth(method="lm")
ggplot(nhData, aes(x=length, y=duration)) + geom_point(shape=1) +  geom_smooth(method="lm")
regModel <- lm(duration ~ length , hData)
summary(regModel)
ggplot(hData, aes(x=length, y=duration)) + geom_point(shape=1) +  geom_smooth(method="lm")
lm(duration ~ length , hData)
regModel <- lm(length ~duration, hData)
summary(regModel)
ggplot(hData, aes(y=length, x=duration)) + geom_point(shape=1) +  geom_smooth(method="lm")
ggplot(nhData, aes(x=length, y=duration)) + geom_point(shape=1) +  geom_smooth(method="lm")
regModel <- lm(length ~duration, nhData)
summary(regModel)
ggplot(nhData, aes(x=length, y=duration)) + geom_point(shape=1) +  geom_smooth(method="lm")
ggplot(nhData, aes(y=length, x=duration)) + geom_point(shape=1) +  geom_smooth(method="lm")
ggplot(nhData, aes(x=length, y=duration)) + geom_point(shape=1) +  geom_smooth(method="lm")
regModel <- lm(length ~duration, hData)
summary(regModel)
ggplot(nhData, aes(x=length, y=duration)) + geom_point(shape=1) +  geom_smooth(method="lm")
regModel <- lm(length ~duration, hData)
summary(regModel)
ggplot(hData, aes(x=length, y=duration)) + geom_point(shape=1) +  geom_smooth(method="lm")
#ANOVA
pData <-read.csv(file="C:/Users/adrianoc/Dropbox (PE-C)/2.Classes-UCI/8. Spring2015/INF205_QuantitativeAnalysis/finalProject/explanationsCurated_predictHypothesisCSV.csv", header=T)
summary(pData)
library(car)
levene.test(pData$length,pData$hasHypothesis,center=median)
#Predicting hypothesis-based from duration
hypothesisModel <-aov( length ~ hasHypothesis, data = pData)
summary(hypothesisModel)
plot(hypothesisModel)
summary(pData)
pairwise.t.test(length ~ hasHypothesis, data = pData)
#load file
eData <-read.csv(file="C:/Users/adrianoc/Dropbox (PE-C)/averageGrades.csv", header=T)
summary(eData)
#load file
eData <-read.csv(file="C:\Users\adrianoc\Dropbox (PE-C)\3.Research\1.Summer2015\averageGrades.csv", header=T)
summary(eData)
eData <-read.csv(file="C:/Users/adrianoc/Dropbox (PE-C)/3.Research/1.Summer2015/averageGrades.csv", header=T)
summary(eData)
batch1Data <- eData$batch1
batch2Data <- eData$batch2
#TIMES MAGAZINE COVERS
timesData <- read.csv(file="C:/Users/adrianoc/Desktop/Course R/data/timesGender.csv", header=T)
#Smooth line
ggplot(timesData, aes(y=ratio, x=Year)) +  geom_point()  + stat_smooth()
#Trying to plot togther, but couldn't
femaleVect <- data.frame(cover = c(timesData$Female))
maleVect <- data.frame(cover = c(timesData$Male))
#Now, combine your two dataframes into one.  First make a new column in each.
femaleVect$count <- 'female'
maleVector$count <- 'male'
yearVect$year<- 'year'
#and combine into one vector
coverVect <- rbind(femaleVect, maleVect)
coverVect$Year <-timesData$Year
ggplot(coverVect, aes(cover, x=Year, y=cover)) + geom_point()  + stat_smooth()
install.packages('ggplot2', dep=TRUE, lib=NULL)
library(ggplot2)
#TIMES MAGAZINE COVERS
timesData <- read.csv(file="C:/Users/adrianoc/Desktop/Course R/data/timesGender.csv", header=T)
#Smooth line
ggplot(timesData, aes(y=ratio, x=Year)) +  geom_point()  + stat_smooth()
#Trying to plot togther, but couldn't
femaleVect <- data.frame(cover = c(timesData$Female))
maleVect <- data.frame(cover = c(timesData$Male))
#Now, combine your two dataframes into one.  First make a new column in each.
femaleVect$count <- 'female'
maleVector$count <- 'male'
yearVect$year<- 'year'
#and combine into one vector
coverVect <- rbind(femaleVect, maleVect)
coverVect$Year <-timesData$Year
ggplot(coverVect, aes(cover, x=Year, y=cover)) + geom_point()  + stat_smooth()
birthData <- read.csv(file="C:/Users/adrianoc/Desktop/Course R/data/birthRate.csv", header=T)
ggplot(birthData, aes(birth_rate)) + geom_histogram(binwidth=0.2)
#load file
eData <-read.csv(file="C:/Users/adrianoc/Dropbox (PE-C)/3.Research/1.Summer2015/averageGrades.csv", header=T)
summary(eData)
#Plotting the data
batch1 <- data.frame(area = c(eData$batch1))
batch2 <- data.frame(area = c(eData$batch2))
#Now, combine your two dataframes into one.  First make a new column in each.
batch1$grade <- 'batch1 gradese'
batch2$grade <- 'batch2 grades'
#and combine into your new data frame forest evolution
batchesCombined <- rbind(batch1, batch2)
ggplot(batchesCombined, aes(area, fill = grade)) + geom_density(alpha= 0.2) +
ggtitle("Batch1 versus Batch2 grade (0 to 4 points)")
ggplot(batchesCombined, aes(area, fill = grade)) + geom_density(alpha= 1) +
ggplot(batchesCombined, aes(area, fill = grade)) + geom_density(alpha= 1) +
ggtitle("Batch1 versus Batch2 grade (0 to 4 points)")
#load file
eData <-read.csv(file="C:/Users/adrianoc/Dropbox (PE-C)/3.Research/1.Summer2015/averageGrades.csv", header=T)
summary(eData)
#Plotting the data
batch1 <- data.frame(area = c(eData$batch1))
batch2 <- data.frame(area = c(eData$batch2))
#Now, combine your two dataframes into one.  First make a new column in each.
batch1$grade <- 'batch1 grades'
batch2$grade <- 'batch2 grades'
#and combine into your new data frame forest evolution
batchesCombined <- rbind(batch1, batch2)
ggplot(batchesCombined, aes(area, fill = grade)) + geom_density(alpha= 0.2) +
ggtitle("Batch1 versus Batch2 grade (0 to 4 points)")
ttest = t.test(batch1,batch2)
ttest = t.test(eData$batch1,eData$batch2)
ttest$statistic
ttest$p.value
ttest$estimate
oreData.df = data.frame( nickleContent = c(3.27, 3.23, 3.31, 3.34, 3.26, 3.24, 3.25, 3.37, 3.29, 3.33))
#nickleContent$density <- 'density'
dat <- data.frame(x = rnorm(1), y = rnorm(1))
summary(oreData.df)
mean(oreData.df$nickleContent)
sd(oreData.df$nickleContent)
sd(oreData.df$nickleContent) / sqrt(10)
?cat
sample <- read.csv("YoE_Profession.csv", header=T)
sample <- read.csv("correl_IDK_LOC_data.csv",  header=T)
sample <- read.csv("correl_IDK_LOC_data.csv",  header=T)
sample <- read.csv(".\\correl_IDK_LOC_data.csv",  header=T)
sample <- read.csv("C:\firefly\IDK_LOC_Correlation\correl_IDK_LOC_data.csv",  header=T)
sample <- read.csv("C://firefly//IDK_LOC_Correlation//correl_IDK_LOC_data.csv",  header=T)
summary(sample)
stat.desc(sample$Percent_IDK, basic=FALSE, norm=TRUE)
install.packages("clinfun")
install.packages("pgirmess")
install.packages("car")
install.packages("ggplot2")
install.packages("pastecs")
library(clinfun)
library(pgirmess)
library(car)
library(ggplot2)
library(pastecs)
library(pastecs)
stat.desc(sample$Percent_IDK, basic=FALSE, norm=TRUE)
shapiro.test(sample$ercent_IDK)
shapiro.test(sample$percent_IDK)
shapiro.test(sample$Percent_IDK)
shapiro.test(sample$LOC) #W = 0.9634, p-value = 0.8414
cor.test(sample$Percent_IDK, sample$LOC, method="pearson")
cor.test(sample$Percent_IDK, sample$LOC, method="kendall")
sample <- read.csv("C://firefly//IDK_LOC_Correlation//correl_IDK_LOC_data.csv",  header=T)
summary(sample)
stat.desc(sample$Percent_IDK, basic=FALSE, norm=TRUE)
shapiro.test(sample$Percent_IDK) #W = 0.9634, p-value = 0.8414 PASSED THE NORMALITY TEST
shapiro.test(sample$LOC) #W = 0.8764, p-value = 0.1739 PASSED THE NORMALITY TEST
cor.test(sample$Percent_IDK, sample$LOC, method="kendall")
sample <- read.csv("C://firefly//IDK_LOC_Correlation//correl_IDK_LOC_remMediumSize_data.csv",  header=T)
summary(sample)
stat.desc(sample$Percent_IDK, basic=FALSE, norm=TRUE)
shapiro.test(sample$Percent_IDK) #W = 0.9634, p-value = 0.8414 PASSED THE NORMALITY TEST
shapiro.test(sample$LOC) #W = 0.7894, p-value = 0.02202 NOT NORMAL
cor.test(sample$Percent_IDK, sample$LOC, method="pearson")
cor.test(sample$Percent_IDK, sample$LOC, method="kendall")
cor.test(sample$Percent_IDK, sample$LOC, method="pearson")
sample <- read.csv("C://firefly//IDK_LOC_Correlation//correl_IDK_LOC_data.csv",  header=T)
summary(sample)
cor.test(sample$Percent_IDK, sample$LOC, method="kendall")
sample <- read.csv("C://firefly//IDK_LOC_Correlation//correl_IDK_LOC_remLargestMethod_data.csv",  header=T)
summary(sample)
stat.desc(sample$Percent_IDK, basic=FALSE, norm=TRUE)
shapiro.test(sample$Percent_IDK) #W = 0.9783, p-value = 0.9426 PASSED THE NORMALITY TEST
shapiro.test(sample$LOC) #W = 0.8071, p-value = 0.06801 PASSED THE NORMALITY TEST
cor.test(sample$Percent_IDK, sample$LOC, method="pearson") #NOT SIGNIFICANT
sample <- read.csv("C://firefly//IDK_LOC_Correlation//WorkerScore_byAnswerOption_data.csv",  header=T)
summary(sample)
shapiro.test(sample$YES_worker_score) #W = 0.9634, p-value = 0.8414 PASSED THE NORMALITY TEST
shapiro.test(sample$NO_worker_score) #W = 0.7894, p-value = 0.02202 NOT NORMAL
shapiro.test(sample$IDK_worker_score) #NOT NORMAL
cor.test(sample$YES_worker_score, sample$NO_worker_score, method="kendall") #NOT SIGNIFICANT
wilcox.test(sample$YES_worker_score, sample$NO_worker_score,  paired=FALSE) #NOT SIGNIFICANT
wilcox.test(sample$YES_worker_score, sample$IDK_worker_score,  paired=FALSE)
wilcox.test(sample$NO_worker_score, sample$IDK_worker_score,  paired=FALSE)
0.05 / 3
model <-wilcox.test(sample$NO_worker_score, sample$IDK_worker_score, paired=FALSE, conf.int=TRUE)
N <-length(sample$NO_worker_score)
rFromWilcox(model, N) #See formula page 665 book
rFromWilcox <- function(wilcoxModel, N){
z <- qnorm(wilcoxModel$p.value/2)
r <- z/sqrt(N)
cat(wilcoxModel$data.name, "Effect size, r=", r)
}
rFromWilcox(model, N) #See formula page 665 book
lm?
?lm
setwd("C://firefly//SubcrowdsCorrelation//")
sample <- read.csv("30_subcrowds_data.csv",  header=T)
summary(sample)
lm(formula= sample$workers ~ sample$lines_to_inspect + I(lines_to_inspect^2), data=sample)
lm(formula= sample$workers ~ sample$lines_to_inspect + I(lines_to_inspect^-2), data=sample)
lm(formula= sample$workers ~ sample$lines_to_inspect + I(sample$workers^2), data=sample)
lm.out = lm(formula= sample$workers ~ sample$lines_to_inspect + I(sample$workers^2), data=sample)
summary(lm.out)
lm.out = lm(formula= sample$workers ~ sample$lines_to_inspect + I(sample$lines_to_inspect^2), data=sample)
summary(lm.out)
plot(lm.out)
lm.out = lm(formula= sample$workers ~ sample$lines_to_inspect + I(sample$workers^2), data=sample)
plot(lm.out)
lm.out = lm(formula= sample$workers ~ sample$lines_to_inspect + I(log(sample$lines_to_inspect)), data=sample)
summary(lm.out)
plot(lm.out)
lm.out = lm(formula= sample$workers ~ sample$lines_to_inspect + I(log(workers)), data=sample)
summary(lm.out)
plot(lm.out)
lm.out = lm(formula= sample$workers ~ sample$lines_to_inspect + I(log(1/workers)), data=sample)
summary(lm.out)
plot(lm.out)
lm.out = lm(formula= sample$workers ~ sample$lines_to_inspect + I(log(-workers)), data=sample)
lm.out = lm(formula= sample$workers ~ sample$lines_to_inspect + I(1/log(workers)), data=sample)
summary(lm.out)
plot(lm.out)
lm.out = lm(formula= sample$workers ~ sample$lines_to_inspect + I(1/log(workers,2)), data=sample)
summary(lm.out)
plot(lm.out)
plot(lm.out)
